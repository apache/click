package net.sf.click.control;

import junit.framework.TestCase;
import net.sf.click.MockContext;

/**
 * Test for manipulating html attributes of Click Controls.
 * 
 * @author Bob Schellink
 */
public class AttributeTest extends TestCase {
        
    /**
     * Test for CLK-249.
     * Cleanup AbstractControl attributes and styles.
     * 
     * This tests the AbstractControl's style and attribute API set.
     */
    public void testAttributesAndStyles() {
        MockContext.initContext();
        
        //Check that multiple styles are rendered as expected
        TextField nameField = new TextField("nameFld");
        nameField.setStyle("color", "red");
        nameField.setStyle("border", "1px solid");
        String expected = "style=\"color:red;border:1px solid;\"";
        //Assert that the expected string was generated by the field
        assertTrue(nameField.toString().indexOf(expected) >= 0);

        //Check that setAttribute("style", null) will remove all styles
        nameField = new TextField("nameFld");
        nameField.setStyle("color", "blue");
        nameField.setStyle("color", "red");
        nameField.setAttribute("style", null);
        assertFalse(nameField.hasAttributes());

        //Check that setStyle("style", null) will remove all styles
        nameField = new TextField("nameFld");
        nameField.setStyle("color", "red");
        nameField.setStyle("color", null);
        assertFalse(nameField.hasAttributes());

        //Check that setAttribute("style", styles) will be parsed and added
        //to the styles map
        nameField = new TextField("nameFld");
        nameField.setStyle("color", "red");
        //Override the style
        nameField.setAttribute("style", "color:blue;border:1px;");
        expected = "style=\"color:blue;border:1px;\"";
        assertTrue(nameField.toString().indexOf(expected) >= 0);
        
        //Check setAttribute("style", ""). Because style value is an empty 
        //string, it should not render any key/value pairs
        nameField = new TextField("nameFld");
        nameField.setAttribute("style", "");
        expected = "style=\"\"";
        assertTrue(nameField.toString().indexOf(expected) > 0);

        //Check setAttribute("style", "color"). setAttribute will set the value
        //of style to the specified value, even if it is invalid. 
        //Here "color" is not a valid style since it does not contain any value.
        //However it is still rendered.
        nameField = new TextField("nameFld");
        nameField.setAttribute("style", "color");
        expected = "style=\"color\"";
        assertTrue(nameField.toString().indexOf(expected) > 0);
        
        //Check that setStyle will replace correctly
        nameField = new TextField("nameFld");
        nameField.setStyle("color", "red");//add color
        nameField.setStyle("color", "blue");//replace color
        expected = "style=\"color:blue;\"";
        assertTrue(nameField.toString().indexOf(expected) > 0);

        //Check that setStyle will add and remove multiple styles correctly
        nameField = new TextField("nameFld");
        nameField.setStyle("size", "3em");//add size
        nameField.setStyle("color", "red");//add color
        nameField.setStyle("color", "blue");//replace color
        nameField.setStyle("border", "1px solid black");//add border
        nameField.setStyle("color", "green");//replace color again
        expected = "style=\"size:3em;color:green;border:1px solid black;\"";        
        assertTrue(nameField.toString().indexOf(expected) > 0);

        //Check that setStyle will add and remove multiple styles correctly
        nameField = new TextField("nameFld");
        nameField.setStyle("size", "3em");//add size
        nameField.setStyle("color", "red");//add color
        nameField.setStyle("color", "blue");//replace color
        nameField.setStyle("border", "1px solid black");//add border
        nameField.setStyle("color", null);//remove color
        expected = "style=\"size:3em;border:1px solid black;\"";
        assertTrue(nameField.toString().indexOf(expected) > 0);
        
        //Check that setStyle still works when setAttribute provdes bogus style
        nameField = new TextField("nameFld");
        nameField.setAttribute("style", "color:");//add size
        nameField.setStyle("border", "1px");//add border
        expected = "style=\"border:1px;\"";
        assertTrue(nameField.toString().indexOf(expected) > 0);
    }

    /**
     * Performance test for CLK-249.
     * Cleanup AbstractControl attributes and styles.
     * 
     * This tests the AbstractControl's style and attribute API set.
     * 
     * This test ran in [5328 ms]
     * 
     * System used: Dual core, 2.16GHz, 2.00GB RAM, Windows XP
     */
    public void testAttributesAndStylesPerf() {
        MockContext.initContext();
        long start = System.currentTimeMillis();
        TextField nameField = null;
        
        //100000 iterations ran in
        //    1890ms for setStyle
        for (int i = 0; i < 100000; i++) {
            nameField = new TextField("nameFld");
            nameField.setStyle("size", "3em");//add size
            nameField.setStyle("color", "red");//add color
            nameField.setStyle("color", "blue");//replace color
            nameField.setStyle("border", "1px solid black");//add border
            nameField.toString();
        }
        System.out.println("Time for setStyle -> " + 
            (System.currentTimeMillis() - start));
        
        //100000 iterations ran in
        //  906ms for setAttribute
        start = System.currentTimeMillis();
        for (int i = 0; i < 100000; i++) {
            nameField = new TextField("nameFld");
            nameField.setAttribute("style", "size:3em");//add size
            nameField.setAttribute("style", "size:3em;color:red;");//add color
            nameField.setAttribute("style", "size:3em;color:blue");//replace color
            nameField.setAttribute("style", "size:3em;color:blue;border:1px solid black");//add border
            nameField.toString();
        }
        
        System.out.println("Time for setAttribute-> " + 
            (System.currentTimeMillis() - start));

        //100000 iterations ran in
        //  1704ms for setStyle and getStyle
        start = System.currentTimeMillis();
        for (int i = 0; i < 100000; i++) {
            nameField = new TextField("nameFld");
            nameField.setStyle("size", "3em");//add size
            nameField.setStyle("color", "red");//add color
            nameField.setStyle("color", "blue");//replace color
            nameField.getStyle("color");//get color
            nameField.getStyle("size");//get size
            nameField.toString();            
        }
        System.out.println("Time for setStyle and getStyle -> " + 
            (System.currentTimeMillis() - start));

        //100000 iterations ran in
        //  828ms for setAttribute and getAttribute
        start = System.currentTimeMillis();
        for (int i = 0; i < 100000; i++) {
            nameField = new TextField("nameFld");
            nameField.setAttribute("style", "size:3em");//add size
            nameField.getAttribute("style");//get style
            nameField.setAttribute("style", "size:3em;color:red;");//add color
            nameField.getAttribute("style");//get style
            nameField.toString();
        }
        System.out.println("Time for setAttribute and getAttribute -> " + 
            (System.currentTimeMillis() - start));
    }
}